{"version":3,"sources":["pages/web/layout/index.js","pages/admin/login/login.js","pages/admin/login/register.js","pages/admin/login/index.js","utils/loadable.js","Router/web.js","pages/web/header/index.js","App.js","serviceWorker.js","index.js"],"names":["WebLayout","className","Component","Login","props","handleSubmit","e","console","log","history","push","onFinish","this","Item","name","rules","required","message","prefix","UserOutlined","style","color","placeholder","Password","LockOutlined","valuePropName","noStyle","href","type","htmlType","block","React","validator","rule","value","callback","length","err","MobileOutlined","LoginAndRegister","onTabChange","key","setState","state","noTitleKey","tabList","tab","contentList","tab1","tab2","to","activeTabKey","loadingComponent","loader","loading","Loadable","webRoutes","menu","title","path","component","loadable","Header","handleClick","current","menuList","menus","filter","v","map","item","i","onClick","selectedKeys","mode","App","exact","routes","route","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.587a689b.chunk.js","sourcesContent":["// 首页布局组件\r\n\r\nimport React, { Component } from 'react'\r\nimport './layout.less'\r\n\r\nclass WebLayout extends Component {\r\n  render () {\r\n    return (\r\n      <div className=\"HomeWrapper\">\r\n        <div className=\"content-list\">\r\n          <div className=\"content-item\">\r\n            <span className=\"title\">六月中遇火</span>\r\n            <span className=\"author\">陶渊明</span>\r\n            <div className=\"content\">\r\n              <p>草庐寄穷巷，甘以辞华轩。</p>\r\n              <p>果菜始复生，惊鸟尚未还。</p>\r\n              <p>一宅无遗宇，肪舟荫门前。</p>\r\n              <p>迢迢新秋夕，亭亭月将圆。</p>\r\n              <p>果菜始复生，惊鸟尚未还。</p>\r\n            </div>\r\n            <div className=\"border\"></div>\r\n            <div className=\"content-tag\">\r\n            感叹\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"content-item\">\r\n            <span className=\"title\">六月中遇火</span>\r\n            <span className=\"author\">陶渊明</span>\r\n            <div className=\"content\">\r\n              <p>草庐寄穷巷，甘以辞华轩。</p>\r\n              <p>果菜始复生，惊鸟尚未还。</p>\r\n              <p>一宅无遗宇，肪舟荫门前。</p>\r\n              <p>迢迢新秋夕，亭亭月将圆。</p>\r\n              <p>果菜始复生，惊鸟尚未还。</p>\r\n            </div>\r\n            <div className=\"border\"></div>\r\n            <div className=\"content-tag\">\r\n            感叹\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"content-item\">\r\n            <span className=\"title\">六月中遇火</span>\r\n            <span className=\"author\">陶渊明</span>\r\n            <div className=\"content\">\r\n              <p>草庐寄穷巷，甘以辞华轩。</p>\r\n              <p>果菜始复生，惊鸟尚未还。</p>\r\n              <p>一宅无遗宇，肪舟荫门前。</p>\r\n              <p>迢迢新秋夕，亭亭月将圆。</p>\r\n              <p>果菜始复生，惊鸟尚未还。</p>\r\n            </div>\r\n            <div className=\"border\"></div>\r\n            <div className=\"content-tag\">\r\n            感叹\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"tag\">\r\n          <div className=\"tag-item\">小学古诗</div>\r\n          <div className=\"tag-item\">初中古诗</div>\r\n          <div className=\"tag-item\">高中古诗</div>\r\n          <div className=\"tag-item\">唐诗三百</div>\r\n          <div className=\"tag-item\">宋词三百</div>\r\n          <div className=\"tag-item\">宋词精选</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WebLayout","// 登录组件\r\nimport React from 'react'\r\nimport {Form, Input, Button, Checkbox } from 'antd'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  // 点击了htmlType为submit的Button后就会触发onFinish, 然后执行的方法\r\n  handleSubmit = (e) => {\r\n    console.log('登录成功')\r\n    // 登录成功后页面跳转\r\n    this.props.history.push('/web/index')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form onFinish={this.handleSubmit}>\r\n\r\n        <Form.Item name=\"username\" rules={[{ required: true, message: '请输入你的手机号或邮箱' }]}>\r\n          <Input prefix={<UserOutlined style={{ color: 'rgba(0,0,0,0.25)' }} />} placeholder=\"你的手机号或邮箱\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"password\" rules={[{ required: true, message: '请输入密码' }]}>\r\n          <Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,0.25)' }} />} placeholder=\"密码\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n            <Checkbox>记住密码</Checkbox>\r\n          </Form.Item>\r\n\r\n          <a className=\"login-form-forgot\" href=\"\">\r\n            忘记密码?\r\n          </a>\r\n        </Form.Item>\r\n\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block>登录</Button>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login","// 注册组件\r\nimport React from 'react'\r\nimport {Form, Input, Button } from 'antd'\r\nimport { UserOutlined, LockOutlined, MobileOutlined } from '@ant-design/icons'\r\nimport './index.less'\r\n\r\nclass Login extends React.Component {\r\n  handleSubmit = (e) => {\r\n    console.log('登录成功')\r\n    this.props.history.push('/web/index')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form onFinish={this.handleSubmit}>\r\n        <Form.Item name=\"username\" rules={[{ required: true, message: '请输入你的昵称' }]}>\r\n          <Input prefix={<UserOutlined style={{ color: 'rgba(0,0,0,0.25)' }} />} placeholder=\"你的昵称\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"userPhoneNum\"\r\n          // 输入手机号的规则\r\n          rules={[\r\n            { validator: (rule, value = '', callback) => {\r\n              try {\r\n                if (value.length == '') {\r\n                  callback('请输入你的手机号码')\r\n                } else if (value.length != 11) {\r\n                  callback('请输入正确的手机号码')\r\n                }\r\n                callback();\r\n              } catch(err) {\r\n                callback(err);\r\n              }\r\n            }}\r\n          ]}\r\n        >\r\n          <Input prefix={<MobileOutlined style={{ color: 'rgba(0,0,0,0.25)' }} />} placeholder=\"你的手机号\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item \r\n          name=\"password\" \r\n          // 输入密码的规则\r\n          rules={[\r\n            { validator: (rule, value = '', callback) => {\r\n              try {\r\n                if (value.length == '') {\r\n                  callback('请输入密码')\r\n                } else if ((value.length < 8) || (value.length > 14)) {\r\n                  callback('密码长度须为8~14之间')\r\n                }\r\n                callback();\r\n              } catch(err) {\r\n                callback(err);\r\n              }\r\n            }}\r\n          ]}\r\n        >\r\n          <Input.Password prefix={<LockOutlined style={{ color: 'rgba(0,0,0,0.25)' }} />} placeholder=\"设置密码\" />\r\n        </Form.Item>\r\n\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block>注册</Button>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport { Card } from 'antd'\r\nimport './index.less'\r\nimport Login from './login.js'\r\nimport Register from './register.js'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass LoginAndRegister extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      key: 'tab1',\r\n      noTitleKey: 'app',\r\n      tabList: [\r\n        {\r\n          key: 'tab1',\r\n          tab: '登录',\r\n        },\r\n        {\r\n          key: 'tab2',\r\n          tab: '注册',\r\n        },\r\n      ],\r\n      contentList: {\r\n        tab1: <Login history={this.props.history} />,\r\n        tab2: <Register history={this.props.history} />,\r\n      }\r\n    }\r\n  }\r\n\r\n  onTabChange = (key, type) => {\r\n    console.log(key, type);\r\n    this.setState({ [type]: key });\r\n  };\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"login\">\r\n        <Link to=\"/web/index\" className=\"login-title\">古诗文鉴赏</Link>\r\n        <Card\r\n          className=\"login-form\" \r\n          tabList={this.state.tabList}\r\n          activeTabKey={this.state.key}\r\n          onTabChange={key => {\r\n          this.onTabChange(key, 'key');\r\n        }}\r\n        >\r\n          {this.state.contentList[this.state.key]}\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoginAndRegister","import React from 'react'\r\nimport Loadable from 'react-loadable'\r\n\r\n// 通过的过场组件\r\nconst loadingComponent = () => {\r\n  return (\r\n    <div>loading</div>\r\n  )\r\n}\r\n\r\n// 过场组件默认采用通用的, 如果传入了新的过场组件, 那么我们就采用新的\r\nexport default (loader, loading = loadingComponent) => {\r\n  return Loadable({\r\n    loader,\r\n    loading\r\n  })\r\n}","import loadable from '../utils/loadable'\r\n\r\nconst Home = loadable(() => import('../pages/web/layout'))  // 推荐\r\nconst Poetry = loadable(() => import('../pages/web/poetry'))   // 诗文\r\nconst Rhesis = loadable(() => import('../pages/web/rhesis'))   // 名句\r\nconst Author = loadable(() => import('../pages/web/author'))   // 作者\r\nconst Ancient = loadable(() => import('../pages/web/ancient'))   // 古籍\r\n\r\nconst webRoutes = [\r\n  {\r\n    menu: true,\r\n    title: '推荐',\r\n    path: '/web/index',\r\n    component: Home\r\n  },\r\n  {\r\n    menu: true,\r\n    title: '诗文',\r\n    path: '/web/poetry',\r\n    component: Poetry\r\n  },\r\n  {\r\n    menu: true,\r\n    title: '名句',\r\n    path: '/web/rhesis',\r\n    component: Rhesis\r\n  },\r\n  {\r\n    menu: true,\r\n    title: '作者',\r\n    path: '/web/author',\r\n    component: Author\r\n  },\r\n  {\r\n    menu: true,\r\n    title: '古籍',\r\n    path: '/web/ancient',\r\n    component: Ancient\r\n  }\r\n]\r\n\r\nexport default webRoutes\r\n","import React from 'react'\r\nimport { Menu } from 'antd';\r\nimport { Button, Input } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport './index.less'\r\nimport menus from '../../../Router/web'\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = ({\r\n      current: 'home'\r\n    })\r\n  }\r\n\r\n  handleClick = e => {\r\n    // console.log('click ', e);\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // 拿到menus中所有menu为true的字段\r\n    const list = menus.filter(v => v.menu)\r\n    const menuList = list.map((item, i) => {\r\n      // 首页的导航栏\r\n      return <Menu.Item key={i} >\r\n        <Link to={item.path}>\r\n          <span className=\"nav-text\">{item.title}</span>\r\n        </Link>\r\n      </Menu.Item>\r\n    })\r\n\r\n    return (\r\n      <div className=\"HeaderWrapper\">\r\n        <a href=\"#\" className=\"header-title\">古诗文鉴赏</a>\r\n        <Menu className=\"menu\" onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\">\r\n          {menuList}\r\n        </Menu>\r\n        \r\n        <Input className=\"header-input\" placeholder=\"搜索...\" />\r\n\r\n        <Button className=\"header-login\">\r\n          <Link to=\"/login\">登录</Link>\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Login from './pages/admin/login'\nimport 'antd/dist/antd.css'\nimport routes from './Router/web'\nimport WebLayout from './pages/web/layout/index'\nimport HeaderCustom from './pages/web/header/index'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <HeaderCustom />\n        <div>\n          <Route exact path=\"/\" component={WebLayout}></Route>\n          <Route path=\"/login\" component={Login} />\n          {\n            routes.map((route, i) => (\n              <Route key={i} path={route.path} component={route.component} />\n            ))\n          }\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}